{"ast":null,"code":"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ZoomImage = function ZoomImage(props) {\n  var src = props.src,\n      fadeDuration = props.fadeDuration,\n      top = props.top,\n      left = props.left,\n      isZoomed = props.isZoomed,\n      onLoad = props.onLoad,\n      onTouchStart = props.onTouchStart,\n      onClose = props.onClose;\n  return React.createElement(Fragment, null, React.createElement('img', {\n    className: 'iiz__zoom-img ' + (isZoomed ? 'iiz__zoom-img--visible' : ''),\n    style: {\n      top: top,\n      left: left,\n      transition: 'linear ' + fadeDuration + 'ms opacity, linear ' + fadeDuration + 'ms visibility'\n    },\n    src: src,\n    onLoad: onLoad,\n    onTouchStart: onTouchStart,\n    alt: ''\n  }), onClose && React.createElement('button', {\n    className: 'iiz__btn iiz__close ' + (isZoomed ? 'iiz__close--visible' : ''),\n    style: {\n      transition: 'linear ' + fadeDuration + 'ms opacity, linear ' + fadeDuration + 'ms visibility'\n    },\n    onClick: onClose,\n    'aria-label': 'Zoom Out'\n  }));\n};\n\nZoomImage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  src: PropTypes.string,\n  fadeDuration: PropTypes.number,\n  top: PropTypes.number,\n  left: PropTypes.number,\n  isZoomed: PropTypes.bool,\n  onLoad: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onClose: PropTypes.func\n} : {};\nexport default ZoomImage;","map":null,"metadata":{},"sourceType":"module"}